#!/bin/bash
#
# runGemServerGem [start | stop | restart]
#
#
Command="$1"
GemServer="$2"
Port="$3"
PidDir="$4"


if [ -s $GEMSTONE/seaside/etc/gemstone.secret ]; then
    . $GEMSTONE/seaside/etc/gemstone.secret
else
    echo 'Missing password file $GEMSTONE/seaside/etc/gemstone.secret'
    exit 1
fi

topaz_start()
{
  if [ -e ${PidDir}/${GemServer}_server-${port}.pid ]; then
    echo "PID file for topaz on port $port already exists (already running?), try using the stop command first."
  else
    echo "  Starting ${GemServer} gem on port $port"
    cat << EOF | nohup $GEMSTONE/bin/topaz -l -T49999 2>&1 >> ${GEMSTONE_LOGDIR}/${GemServer}_server-${Port}.log &

set user DataCurator pass $GEMSTONE_CURATOR_PASS gems $GEMSTONE_NAME


login

run
GemServerRegistry startGemServer: '$GemServer' On: $port.
%
run
System beginTransaction.
(ObjectLogEntry
  fatal: '${GemServer}_server_${Port}: topaz exit'
  object:
    'pid: ', (System gemVersionReport at: 'processId') printString) addToLog.
System commitTransaction.
%
EOF
  fi
}

topaz_stop()
{
  echo "Stopping Gem"

        pidfile="${toolPath}/${GemServer}_server-${port}.pid"

        if [ -e $pidfile ]; then
            pid=`cat $pidfile`
            echo "   Stopping ${GemServer} topaz PID $pid running on port $port"
            kill $pid
            rm $pidfile
        else
            echo "   No PID file found for gem on port $port, not running?"
        fi

    done


sleep 2
}

topaz_restart()
{
    echo "Restarting Gems..."
    topaz_stop
    topaz_start
}

case "$Command" in

    start)
           topaz_start
            ;;
    restart)
            topaz_restart
            ;;
    stop)
            topaz_stop
            ;;
    *)
            echo "Usage: $(basename $0) (start|stop|restart)"
            ;;
esac

